name: libEnsemble-simple-CI

on:
  pull_request:
    types:
      - ready_for_review
      - opened
      - reopened
      - synchronize

jobs:
    test-libE:
        if: '! github.event.pull_request.draft'
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                mpi-version: [mpich]
                python-version: [3.9, "3.10", "3.11"]
                comms-type: [m, l]
                include:
                    - os: macos-latest
                      python-version: 3.9
                      mpi-version: "mpich=4.0.3"
                      comms-type: m
                    - os: macos-latest
                      python-version: 3.9
                      mpi-version: "mpich=4.0.3"
                      comms-type: l

        env:
            HYDRA_LAUNCHER: "fork"
            TERM: xterm-256color
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        defaults:
            run:
                shell: bash -l {0}

        steps:
        - uses: actions/checkout@v4
        - name: Setup conda - Python ${{ matrix.python-version }}
          uses: conda-incubator/setup-miniconda@v2
          with:
            activate-environment: condaenv
            miniconda-version: "latest"
            python-version: ${{ matrix.python-version }}
            channels: conda-forge
            channel-priority: flexible
            auto-update-conda: true

        - uses: actions/cache/restore@v3
          name: Restore cached dependencies
          id: cache
          if: matrix.os == 'ubuntu-latest'
          with:
            path: |
              /home/runner/work/libensemble/libensemble/heffte/build/
              /home/runner/.local
              /usr/share/miniconda3/envs/condaenv
              /usr/share/miniconda3/bin
              /usr/share/miniconda3/lib
              /usr/share/miniconda3/include
            key: libe-${{ github.ref_name }}-${{ matrix.python-version }}-${{ matrix.comms-type }}

        - name: Force-update certifi
          run: |
            python --version
            pip install -I --upgrade certifi

        - name: Install Ubuntu compilers
          if: matrix.os == 'ubuntu-latest'
          run: conda install gcc_linux-64

        # Roundabout solution on macos for proper linking with mpicc
        - name: Install macOS compilers and older SDK
          if: matrix.os == 'macos-latest'
          run: |
            wget https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.15.sdk.tar.xz
            mkdir ../sdk; tar xf MacOSX10.15.sdk.tar.xz -C ../sdk
            conda install clang_osx-64

        - name: Install mpi4py and MPI from conda
          if: (matrix.python-version != '3.10' && matrix.os == 'ubuntu-latest') || matrix.os == 'macos-latest'
          run: |
            conda install mpi4py ${{ matrix.mpi-version }}

        - name: Install mpi4py from pip, MPI from conda
          if: matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest'
          run: |
            conda install ${{ matrix.mpi-version }}
            pip install mpi4py

        - name: Install generator dependencies
          if: matrix.os != 'windows-latest' && steps.cache.outputs.cache-hit != 'true'
          run: |
            python -m pip install --upgrade pip
            conda numpy nlopt scipy

        - uses: actions/cache/save@v3
          name: Save dependencies to cache
          if: matrix.os == 'ubuntu-latest'
          with:
            path: |
              /home/runner/.local
              /usr/share/miniconda3/envs/condaenv
              /usr/share/miniconda3/bin
              /usr/share/miniconda3/lib
              /usr/share/miniconda3/include
            key: libe-${{ github.ref_name }}-${{ matrix.python-version }}-${{ matrix.comms-type }}

        - name: Install libEnsemble, flake8, lock environment
          run: |
            pip install -e .
            flake8 libensemble

        - name: Run simple tests, Ubuntu
          if: matrix.os == 'ubuntu-latest'
          run: |
           ./libensemble/tests/run-tests.sh -A "-W error" -z -${{ matrix.comms-type }}

        - name: Run simple tests, macOS
          if: matrix.os == 'macos-latest'
          env:
              CONDA_BUILD_SYSROOT: /Users/runner/work/libensemble/sdk/MacOSX10.15.sdk
          run: |
            ./libensemble/tests/run-tests.sh -A "-W error" -z -${{ matrix.comms-type }}

        - name: Merge coverage, run Coveralls
          env:
              COVERALLS_PARALLEL: true
          run: |
            mv libensemble/tests/.cov* .
            coveralls --service=github

    coveralls:
        name: Notify coveralls of all jobs completing
        needs: [test-libE]
        if: '! github.event.pull_request.draft'
        runs-on: ubuntu-latest
        container: python:3-slim
        steps:
        - name: Finished
          run: |
            pip3 install --upgrade coveralls
            coveralls --finish
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    spellcheck:
        name: Spellcheck release branch
        if: contains(github.base_ref, 'develop')
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - uses: crate-ci/typos@v1.16.17
