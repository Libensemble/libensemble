name: libEnsemble-complete-CI

on:
  workflow_dispatch:

jobs:
    test-libE:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                mpi-version: [mpich]
                python-version: ['3.10', '3.11', '3.12', '3.13']
                pydantic-version: ['2.11.4']
                comms-type: [m, l]
                include:
                    - os: macos-latest
                      python-version: '3.13'
                      mpi-version: mpich
                      pydantic-version: '2.11.4'
                      comms-type: m
                    - os: macos-latest
                      python-version: '3.13'
                      mpi-version: mpich
                      pydantic-version: '2.11.4'
                      comms-type: l
                    - os: ubuntu-latest
                      python-version: '3.12'
                      mpi-version: mpich
                      pydantic-version: '2.11.4'
                      comms-type: t
                    - os: ubuntu-latest
                      mpi-version: 'openmpi'
                      pydantic-version: '2.11.4'
                      python-version: '3.12'
                      comms-type: l
                    - os: ubuntu-latest
                      mpi-version: mpich
                      python-version: '3.12'
                      pydantic-version: '1.10.22'
                      comms-type: m
                    - os: ubuntu-latest
                      mpi-version: mpich
                      python-version: '3.12'
                      pydantic-version: '1.10.22'
                      comms-type: l

        env:
            HYDRA_LAUNCHER: 'fork'
            TERM: xterm-256color
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        defaults:
            run:
                shell: bash -l {0}

        steps:
        - uses: actions/checkout@v4
          with:
            lfs: true

        - name: Checkout lockfile
          run: git lfs checkout

        - uses: prefix-dev/setup-pixi@v0.8.8
          with:
            pixi-version: v0.45.0
            environments: "extra"
            activate-environment: "extra"

        - name: Install surmise and Tasmanian
          if: matrix.os == 'ubuntu-latest'
          run: |
            pip install --upgrade git+https://github.com/bandframework/surmise.git
            pip install Tasmanian --user

        - name: Install Balsam on Pydantic 1
          if: matrix.pydantic-version == '1.10.22'
          run: |
            conda install pyzmq
            git clone https://github.com/argonne-lcf/balsam.git
            sed -i -e "s/pyzmq>=22.1.0,<23.0.0/pyzmq>=23.0.0,<24.0.0/" ./balsam/setup.cfg
            cd balsam; pip install -e .; cd ..

        - name: Install IBCDFO
          run: |
            pixi run -e extra ./install/install_ibcdfo.sh

        - name: Install libEnsemble, flake8, lock environment
          run: |
            pip install pydantic==${{ matrix.pydantic-version }}
            pip install -e .
            flake8 libensemble

        - name: Remove test using octave, gpcam on Python 3.13
          if: matrix.python-version >= '3.13'
          run: |
            rm ./libensemble/tests/regression_tests/test_persistent_fd_param_finder.py # needs octave, which doesn't yet support 3.13
            rm ./libensemble/tests/regression_tests/test_persistent_aposmm_external_localopt.py # needs octave, which doesn't yet support 3.13
            rm ./libensemble/tests/regression_tests/test_gpCAM.py # needs gpcam, which doesn't build on 3.13

        - name: Remove proxystore test on Pydantic 1
          if: matrix.pydantic-version == '1.10.22'
          run: |
            rm ./libensemble/tests/regression_tests/test_proxystore_integration.py

        - name: Remove Balsam/Globus-compute tests on Pydantic 2
          if: matrix.pydantic-version == '2.11.4'
          run: |
            rm ./libensemble/tests/unit_tests/test_ufunc_runners.py
            rm ./libensemble/tests/unit_tests/test_executor_balsam.py

        - name: Start Redis
          if: matrix.os == 'ubuntu-latest'
          uses: supercharge/redis-github-action@1.8.0
          with:
            redis-version: 7

        - name: Run extensive tests, Ubuntu
          if: matrix.os == 'ubuntu-latest'
          run: |
           ./libensemble/tests/run_tests.py -e -${{ matrix.comms-type }}

        - name: Run extensive tests, macOS
          if: matrix.os == 'macos-latest'
          run: |
            pixi run -e extra ./libensemble/tests/run_tests.py -e -${{ matrix.comms-type }}

        - name: Merge coverage
          run: |
            mv libensemble/tests/.cov* .

        - name: Upload coverage reports to Codecov
          uses: codecov/codecov-action@v5
          env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    spellcheck:
        name: Spellcheck release branch
        if: contains(github.base_ref, 'develop')
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - uses: crate-ci/typos@v1.32.0
