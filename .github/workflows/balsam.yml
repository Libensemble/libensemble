name: libE-Balsam
on: [pull_request]
jobs:
    test-libE-with-Balsam:
        name: Test Balsam with libEnsemble
        if: always()
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python-version: [3.8]
                comms-type: [l]

        defaults:
            run:
                shell: bash -l {0}

        env:
            HYDRA_LAUNCHER: 'fork'
            TERM: xterm-256color
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            BALSAM_DB_PATH: $HOME/test-balsam

        steps:
        - uses: actions/checkout@v2
        - name: Setup conda - Python ${{ matrix.python-version }}
          uses: conda-incubator/setup-miniconda@v2
          with:
            activate-environment: condaenv
            miniconda-version: "latest"
            python-version: ${{ matrix.python-version }}
            channels: conda-forge
            channel-priority: flexible
            auto-update-conda: true

        - name: Force-update certifi
          run: |
            python --version
            pip install -I --upgrade certifi

        - name: Install Ubuntu compilers, postgresql
          run: |
            conda install gcc_linux-64
            conda install libpq postgresql postgresql-plpython
            pg_ctl --version

        - name: Install bc
          run: |
            sudo apt-get update
            sudo apt-get install bc

        - name: Install mpi4py, psutil, pyyaml
          run: |
            conda install mpich
            conda install mpi4py
            conda install psutil pyyaml

        - name: Install test dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r install/testing_requirements.txt

        - name: Find MPI, Install libEnsemble, flake8, ulimit adjust
          run: |
            python install/find_mpi.py
            mpiexec --version
            pip install -e .
            flake8 libensemble
            ulimit -Sn 10000

        - name: Install and configure Balsam 0.5.0
          run: |
            wget https://github.com/argonne-lcf/balsam/archive/refs/tags/0.5.0.tar.gz
            mkdir ../balsam; tar xf 0.5.0.tar.gz -C ../balsam;
            python install/configure_balsam_install.py

        - name: Modify Balsam for testing, create DB
          run: |
            pg_ctl --version
            balsam init $HOME/test-balsam
            sudo chmod -R 700 $HOME/test-balsam/balsamdb
            source balsamactivate test-balsam
            python -c 'from libensemble.tests.regression_tests.common import modify_Balsam_pyCoverage; modify_Balsam_pyCoverage()'
            python -c 'from libensemble.tests.regression_tests.common import modify_Balsam_settings; modify_Balsam_settings()'

        - name: Run test
          run: |
           source balsamactivate test-balsam
           ./libensemble/tests/run-tests.sh -re -y 'test_balsam*' -z -l

        - name: Merge coverage, run Coveralls
          env:
              COVERALLS_PARALLEL: true
          run: |
            mv libensemble/tests/.cov* .
            coveralls --service=github

    coveralls:
        name: Notify coveralls of all jobs completing
        needs: [test-libE-with-Balsam]
        if: always()
        runs-on: ubuntu-latest
        container: python:3-slim
        steps:
        - name: Finished
          run: |
            pip3 install --upgrade coveralls
            coveralls --finish
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
